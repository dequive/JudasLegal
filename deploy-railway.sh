#!/bin/bash

echo "üöÇ Deploy Muzaia no Railway"
echo "==========================="
echo ""

# Verificar se temos os arquivos necess√°rios
if [ ! -f "backend_complete.py" ]; then
    echo "‚ùå Arquivo backend_complete.py n√£o encontrado"
    exit 1
fi

echo "üì¶ Preparando arquivos para Railway..."

# Criar requirements.txt otimizado para Railway
cat > requirements.txt << 'EOF'
fastapi==0.104.1
uvicorn[standard]==0.24.0
psycopg2-binary==2.9.9
google-generativeai==0.3.2
python-multipart==0.0.6
PyPDF2==3.0.1
python-docx==0.8.11
numpy==1.24.3
python-jose[cryptography]==3.3.0
passlib[bcrypt]==1.7.4
aiofiles==23.2.1
httpx==0.24.1
chardet==5.2.0
sqlalchemy==2.0.23
pydantic==2.5.0
python-dateutil==2.8.2
gunicorn==21.2.0
EOF

# Criar railway.json
cat > railway.json << 'EOF'
{
  "$schema": "https://railway.app/railway.schema.json",
  "build": {
    "builder": "NIXPACKS"
  },
  "deploy": {
    "startCommand": "uvicorn backend_complete:app --host 0.0.0.0 --port $PORT",
    "healthcheckPath": "/health",
    "healthcheckTimeout": 100,
    "restartPolicyType": "ON_FAILURE",
    "restartPolicyMaxRetries": 10
  }
}
EOF

# Criar nixpacks.toml para Railway
cat > nixpacks.toml << 'EOF'
[phases.setup]
nixPkgs = ['python311', 'postgresql']

[phases.install]
cmds = [
    'pip install --upgrade pip',
    'pip install -r requirements.txt'
]

[phases.build]
cmds = ['python -c "print(\"Build completed\")"']

[start]
cmd = 'uvicorn backend_complete:app --host 0.0.0.0 --port $PORT --workers 1'
EOF

# Criar Procfile para Railway
cat > Procfile << 'EOF'
web: uvicorn backend_complete:app --host 0.0.0.0 --port $PORT --workers 1
EOF

# Criar script de inicializa√ß√£o
cat > railway-start.sh << 'EOF'
#!/bin/bash
echo "üöÄ Iniciando Muzaia no Railway..."
echo "PORT: $PORT"
echo "PYTHONPATH: $PYTHONPATH"

# Verificar vari√°veis essenciais
if [ -z "$GEMINI_API_KEY" ]; then
    echo "‚ö†Ô∏è GEMINI_API_KEY n√£o configurada"
fi

if [ -z "$DATABASE_URL" ]; then
    echo "‚ö†Ô∏è DATABASE_URL n√£o configurada"
fi

# Iniciar aplica√ß√£o
exec uvicorn backend_complete:app --host 0.0.0.0 --port $PORT --workers 1 --log-level info
EOF

chmod +x railway-start.sh

# Criar README espec√≠fico para Railway
cat > README.md << 'EOF'
# Muzaia Legal Assistant Backend

Sistema de assistente jur√≠dico especializado em legisla√ß√£o mo√ßambicana.

## Deploy no Railway

### Configura√ß√£o Autom√°tica
Este reposit√≥rio est√° configurado para deploy autom√°tico no Railway.

### Vari√°veis de Ambiente Necess√°rias
```
GEMINI_API_KEY=sua_chave_gemini
DATABASE_URL=postgresql://user:password@host:port/database
```

### URLs de Produ√ß√£o
- Backend: https://muzaia-backend-production.up.railway.app
- Health: https://muzaia-backend-production.up.railway.app/health
- Docs: https://muzaia-backend-production.up.railway.app/docs

### Funcionalidades
- Chat jur√≠dico com IA Gemini
- Upload e processamento de documentos legais
- Sistema RAG para pesquisa legal
- Interface administrativa
- APIs RESTful completas

### Tecnologias
- FastAPI
- Google Gemini AI
- PostgreSQL/Supabase
- Railway Platform
EOF

echo "‚úÖ Arquivos criados para Railway:"
echo "‚Ä¢ requirements.txt - Depend√™ncias Python"
echo "‚Ä¢ railway.json - Configura√ß√£o Railway"
echo "‚Ä¢ nixpacks.toml - Build configuration"
echo "‚Ä¢ Procfile - Comando de inicializa√ß√£o"
echo "‚Ä¢ railway-start.sh - Script personalizado"
echo "‚Ä¢ README.md - Documenta√ß√£o"
echo ""

echo "üåê PR√ìXIMOS PASSOS - RAILWAY:"
echo "============================"
echo ""
echo "M√âTODO 1 - GitHub (Recomendado):"
echo "1. Criar reposit√≥rio GitHub p√∫blico"
echo "2. Push do c√≥digo para GitHub"
echo "3. Conectar Railway ao reposit√≥rio"
echo ""
echo "M√âTODO 2 - Railway CLI:"
echo "1. Instalar CLI: npm install -g @railway/cli"
echo "2. Login: railway login"
echo "3. Deploy: railway deploy"
echo ""

echo "üìã CONFIGURA√á√ÉO RAILWAY:"
echo "========================"
echo ""
echo "1. Ir para https://railway.app"
echo "2. Criar conta (gratuito - $5 de cr√©dito)"
echo "3. New Project > Deploy from GitHub repo"
echo "4. Selecionar reposit√≥rio muzaia-backend"
echo "5. Configurar vari√°veis de ambiente:"
echo "   ‚Ä¢ GEMINI_API_KEY = [vossa chave]"
echo "   ‚Ä¢ DATABASE_URL = [vossa URL Supabase]"
echo ""
echo "6. Deploy autom√°tico ser√° iniciado"
echo ""

echo "üéØ URLs FINAIS:"
echo "Backend: https://[seu-projeto].up.railway.app"
echo "Health: https://[seu-projeto].up.railway.app/health"
echo "Docs: https://[seu-projeto].up.railway.app/docs"
echo ""

echo "üí° VANTAGENS RAILWAY:"
echo "‚Ä¢ $5 de cr√©dito gr√°tis"
echo "‚Ä¢ Deploy em ~2 minutos"
echo "‚Ä¢ HTTPS autom√°tico"
echo "‚Ä¢ Logs em tempo real"
echo "‚Ä¢ M√©tricas detalhadas"
echo "‚Ä¢ Dom√≠nios personalizados"
echo "‚Ä¢ Restart autom√°tico"
echo ""

echo "üöÄ Railway √© perfeito para projetos Python!"
echo "Muito mais est√°vel que muitas alternativas."