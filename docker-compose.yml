# Docker Compose para desenvolvimento Muzaia
# Facilita setup completo do ambiente de desenvolvimento

version: '3.8'

services:
  # Backend FastAPI
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://muzaia:muzaia123@db:5432/muzaia_legal
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - uploaded_documents:/app/uploads
    restart: unless-stopped
    networks:
      - muzaia-network

  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NODE_ENV=development
    depends_on:
      - backend
    volumes:
      - ./pages:/app/pages
      - ./components:/app/components
      - ./styles:/app/styles
    restart: unless-stopped
    networks:
      - muzaia-network

  # Base de dados PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=muzaia_legal
      - POSTGRES_USER=muzaia
      - POSTGRES_PASSWORD=muzaia123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - muzaia-network

  # Redis para cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - muzaia-network
    command: redis-server --appendonly yes

  # Nginx para load balancing (opcional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - muzaia-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploaded_documents:
    driver: local

networks:
  muzaia-network:
    driver: bridge