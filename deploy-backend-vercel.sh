#!/bin/bash

echo "üöÄ Deploy do Backend Muzaia no Vercel"
echo "======================================"

# Verificar se est√° no direct√≥rio correcto
if [ ! -f "backend_complete.py" ]; then
    echo "‚ùå Erro: backend_complete.py n√£o encontrado!"
    echo "Execute este script no direct√≥rio raiz do projecto."
    exit 1
fi

# Verificar depend√™ncias
echo "üì¶ Verificando depend√™ncias..."

# Usar requirements.txt otimizado para Vercel
if [ ! -f "requirements.txt" ] || [ "requirements-vercel.txt" -nt "requirements.txt" ]; then
    echo "üìù Copiando requirements.txt otimizado para Vercel..."
    cp requirements-vercel.txt requirements.txt
    echo "‚úÖ requirements.txt atualizado"
fi

# Verificar vercel.json
echo "üìù Verificando vercel.json..."
if [ -f "vercel.json" ]; then
    echo "‚úÖ vercel.json encontrado e j√° est√° configurado para backend"
else
    echo "‚ùå vercel.json n√£o encontrado!"
    exit 1
fi

echo ""
echo "üîß CONFIGURA√á√ÉO NECESS√ÅRIA:"
echo "=========================="
echo ""
echo "1. Configurar vari√°veis de ambiente no Vercel:"
echo "   vercel env add GEMINI_API_KEY"
echo "   vercel env add DATABASE_URL"
echo ""
echo "2. Suas vari√°veis actuais devem ser:"
echo "   GEMINI_API_KEY: Vossa chave do Google Gemini"
echo "   DATABASE_URL: Vossa URL do Supabase PostgreSQL"
echo ""

# Verificar se o utilizador quer continuar
read -p "Deseja continuar com o deploy? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Deploy cancelado pelo utilizador"
    exit 1
fi

echo ""
echo "üöÄ Iniciando deploy no Vercel..."

# Fazer login se necess√°rio
if ! vercel whoami > /dev/null 2>&1; then
    echo "üîê A fazer login no Vercel..."
    vercel login
fi

# Deploy do backend
echo "üì§ Fazendo deploy do backend..."
vercel --prod

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ DEPLOY CONCLU√çDO COM SUCESSO!"
    echo "==============================="
    echo ""
    echo "Vosso backend est√° agora dispon√≠vel em:"
    vercel ls | grep muzaia | head -1 | awk '{print "üåê https://" $2}'
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "1. Testar os endpoints:"
    echo "   curl https://vosso-projeto.vercel.app/health"
    echo "   curl https://vosso-projeto.vercel.app/api/chat"
    echo ""
    echo "2. Actualizar frontend para usar a nova URL do backend"
    echo "3. Configurar CORS se necess√°rio"
    echo ""
    echo "üìñ Documenta√ß√£o completa: VERCEL_BACKEND_ACCESS.md"
else
    echo ""
    echo "‚ùå ERRO NO DEPLOY"
    echo "================"
    echo ""
    echo "Poss√≠veis solu√ß√µes:"
    echo "1. Verificar se todas as vari√°veis de ambiente est√£o definidas"
    echo "2. Verificar se requirements.txt est√° correcto"
    echo "3. Verificar logs: vercel logs"
    echo "4. Consultar VERCEL_BACKEND_ACCESS.md para mais informa√ß√µes"
fi