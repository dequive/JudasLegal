#!/bin/bash

echo "üõ†Ô∏è Gest√£o Muzaia Droplet (164.92.160.176)"
echo "=========================================="

DROPLET_IP="164.92.160.176"

echo ""
echo "Escolha uma op√ß√£o:"
echo "1. Status dos servi√ßos"
echo "2. Logs do backend"
echo "3. Reiniciar backend"
echo "4. Atualizar c√≥digo"
echo "5. Health check"
echo "6. Configurar SSL"
echo "7. Backup da aplica√ß√£o"
echo "8. Monitoriza√ß√£o em tempo real"
echo "9. Sair"
echo ""

while true; do
    read -p "Op√ß√£o (1-9): " choice
    
    case $choice in
        1)
            echo ""
            echo "üìä Status dos Servi√ßos:"
            echo "======================"
            ssh root@$DROPLET_IP << 'REMOTE'
                echo "üîç Muzaia Backend:"
                systemctl is-active --quiet muzaia && echo "‚úÖ Activo" || echo "‚ùå Inactivo"
                
                echo ""
                echo "üîç Nginx:"
                systemctl is-active --quiet nginx && echo "‚úÖ Activo" || echo "‚ùå Inactivo"
                
                echo ""
                echo "üîç Uso de recursos:"
                echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
                echo "RAM: $(free -h | awk 'NR==2{printf "%.1f%%", $3*100/$2}')"
                echo "Disco: $(df -h /var/www/muzaia | awk 'NR==2{print $5}')"
                
                echo ""
                echo "üåê Conectividade:"
                curl -s -o /dev/null -w "Status: %{http_code}\nTempo: %{time_total}s\n" http://localhost:8000/health
REMOTE
            echo ""
            ;;
        2)
            echo ""
            echo "üìã Logs do Backend (√∫ltimas 50 linhas):"
            echo "======================================"
            ssh root@$DROPLET_IP "journalctl -u muzaia -n 50 --no-pager"
            echo ""
            ;;
        3)
            echo ""
            echo "üîÑ Reiniciando Backend..."
            ssh root@$DROPLET_IP << 'REMOTE'
                systemctl restart muzaia
                sleep 3
                systemctl is-active --quiet muzaia && echo "‚úÖ Reiniciado com sucesso" || echo "‚ùå Erro no rein√≠cio"
REMOTE
            echo ""
            ;;
        4)
            echo ""
            echo "üì¶ Atualizando C√≥digo..."
            echo "Fazendo backup do c√≥digo actual..."
            
            # Backup local
            ssh root@$DROPLET_IP "cp /var/www/muzaia/backend_complete.py /var/www/muzaia/backend_complete.py.backup"
            
            # Upload novo c√≥digo
            scp backend_complete.py root@$DROPLET_IP:/var/www/muzaia/
            
            # Reiniciar servi√ßo
            ssh root@$DROPLET_IP << 'REMOTE'
                chown www-data:www-data /var/www/muzaia/backend_complete.py
                systemctl restart muzaia
                sleep 3
                systemctl is-active --quiet muzaia && echo "‚úÖ C√≥digo atualizado" || echo "‚ùå Erro na atualiza√ß√£o"
REMOTE
            echo ""
            ;;
        5)
            echo ""
            echo "üè• Health Check Completo:"
            echo "========================"
            
            # Teste local
            echo "üîç Teste interno:"
            ssh root@$DROPLET_IP "curl -s http://localhost:8000/health | python3 -c 'import json,sys; data=json.load(sys.stdin); print(f\"Status: {data.get(\"status\")}\nService: {data.get(\"service\")}\nVersion: {data.get(\"version\")}\"' 2>/dev/null || echo 'Erro no health check'"
            
            echo ""
            echo "üåê Teste externo:"
            curl -s http://164.92.160.176/health | python3 -c "import json,sys; data=json.load(sys.stdin); print(f'Status: {data.get(\"status\")}\nAI: {data.get(\"ai\")}\nLegal System: {data.get(\"legal_system\")}');" 2>/dev/null || echo "‚ùå N√£o acess√≠vel externamente"
            
            echo ""
            ;;
        6)
            echo ""
            ./setup-ssl.sh
            ;;
        7)
            echo ""
            echo "üíæ Criando Backup..."
            BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
            
            ssh root@$DROPLET_IP << EOF
                mkdir -p /root/backups
                tar -czf /root/backups/muzaia_backup_${BACKUP_DATE}.tar.gz /var/www/muzaia
                echo "‚úÖ Backup criado: /root/backups/muzaia_backup_${BACKUP_DATE}.tar.gz"
                
                echo ""
                echo "üìä Backups dispon√≠veis:"
                ls -lh /root/backups/muzaia_backup_*.tar.gz 2>/dev/null || echo "Nenhum backup anterior"
EOF
            echo ""
            ;;
        8)
            echo ""
            echo "üìä Monitoriza√ß√£o em Tempo Real:"
            echo "==============================="
            echo "Pressione Ctrl+C para sair"
            echo ""
            
            ssh root@$DROPLET_IP << 'REMOTE'
                while true; do
                    clear
                    echo "üïê $(date)"
                    echo "=================="
                    echo ""
                    
                    echo "üîç Status Servi√ßos:"
                    systemctl is-active --quiet muzaia && echo "‚úÖ Backend: Activo" || echo "‚ùå Backend: Inactivo"
                    systemctl is-active --quiet nginx && echo "‚úÖ Nginx: Activo" || echo "‚ùå Nginx: Inactivo"
                    
                    echo ""
                    echo "üìä Recursos:"
                    echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
                    echo "RAM: $(free -h | awk 'NR==2{printf "%.1f%% (%s/%s)", $3*100/$2, $3, $2}')"
                    
                    echo ""
                    echo "üåê Health Check:"
                    curl -s -w "Resposta: %{http_code} | Tempo: %{time_total}s\n" -o /dev/null http://localhost:8000/health
                    
                    echo ""
                    echo "üìã √öltimos 3 logs:"
                    journalctl -u muzaia -n 3 --no-pager --since "5 minutes ago" | tail -3
                    
                    sleep 10
                done
REMOTE
            ;;
        9)
            echo "üëã Saindo..."
            exit 0
            ;;
        *)
            echo "‚ùå Op√ß√£o inv√°lida. Escolha 1-9."
            ;;
    esac
done